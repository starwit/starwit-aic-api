name: Create release and publish

on:
  workflow_dispatch:
    inputs:
      RELEASE_VERSION:
        description: "Set release version"
        required: true

permissions:
  contents: write

env:
  RELEASE_VERSION: ${{ github.event.inputs.RELEASE_VERSION }}

jobs:
  build:
    name: "Creating maven and github release"
    runs-on: [self-hosted, linux, X64]
    outputs:
      VERSION_BUILD: ${{ steps.get-version.outputs.VERSION_BUILD }}     
    
    steps:
    - name: Install GH CLI
      uses: dev-hanz-ops/install-gh-cli-action@v0.2.0

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: 21

    - name: Set up Maven
      uses: stCarolas/setup-maven@v5
      with:
         maven-version: 3.9.2

    - name: Set up Node
      uses: actions/setup-node@v4
      with:
        node-version: lts/*

    - uses: actions/setup-python@v5
      with:
        python-version: '3.12' 

    - name: checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: '0'

    - name: Checkout ki-cockpit/ai-cockpit-api
      uses: actions/checkout@v4
      with:
        repository: ki-cockpit/ai-cockpit-api
        path: ai-cockpit-api

    - name: Set up openapi-generator-cli
      run: |
        npm install @openapitools/openapi-generator-cli -g

    - name: Install Poetry
      uses: snok/install-poetry@v1

    - name: Generate Python lib
      working-directory: ./python
      run: |
        ./generate.sh
    
    - name: Set Python lib version
      working-directory: ./python/generated-library
      run: |
        poetry version ${{ env.RELEASE_VERSION }}
    
    - name: Generate Java lib
      working-directory: ./java
      run: |
        ./generate.sh

    - name: Set Java lib version and build
      working-directory: ./java/aicockpit-jar
      run: | 
        echo "new version manually set to ${{ env.RELEASE_VERSION }}"
        mvn -B build-helper:parse-version versions:set -DnewVersion=${{ env.RELEASE_VERSION }}-SNAPSHOT versions:commit --settings ${{ github.workspace }}/.github/workflows/settings.xml

    - name: Commit and push tag
      run: |
        git config --global user.email "code@starwit.de"
        git config --global user.name "Starwit"
        git add .
        modifications=$(git status | grep "modified" || true)
        if [ ! -z "$modifications" ]
        then
          echo "modifications found: $modifications"
          git commit -m "Bumping version to ${{ env.RELEASE_VERSION }}"
          git push
        fi
      env:
         CI: false

    - name: Get tag name
      run: |
        echo "TAG=${{ env.RELEASE_VERSION }}" >> $GITHUB_ENV

    - name: Create github release
      run: gh release create ${{ env.TAG }} -F CHANGELOG.md
      env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Build Maven project
      working-directory: ./java/aicockpit-jar
      run: mvn clean -B package
      env:
         CI: false
         MAVEN_GPG_PASSPHRASE: ${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}
         MAVEN_GPG_KEY: ${{ secrets.OSSRH_GPG_SECRET_KEY }}

    - name: Publish Maven package to Maven Central
      working-directory: ./java/aicockpit-jar
      run: mvn deploy --settings ${{ github.workspace }}/.github/workflows/settings.xml
      env:
        MAVEN_GPG_PASSPHRASE: ${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}
        MAVEN_GPG_KEY: ${{ secrets.OSSRH_GPG_SECRET_KEY }}        
        MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}


