name: Publish libraries

on:
  workflow_dispatch:
    inputs:
      RELEASE_VERSION:
        description: "Set release version (required)"
        required: true

permissions:
  contents: write
  id-token: write

env:
  RELEASE_VERSION: ${{ github.event.inputs.RELEASE_VERSION }}
  PYTHON_PACKAGE_NAME: starwit_aic_api

jobs:
  publish_python_lib:
    name: "Publish Python library"
    runs-on: [self-hosted, linux, X64]
    environment:
      name: pypi
      url: https://pypi.org/p/${{ env.PYTHON_PACKAGE_NAME }}

    steps:
    - name: checkout
      uses: actions/checkout@v5
      with:
        fetch-depth: '0'
        ref: ${{ env.RELEASE_VERSION }}      

    - uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: 21

    - name: Set up Node
      uses: actions/setup-node@v4
      with:
        node-version: lts/*

    - name: Set up openapi-generator-cli
      run: |
        npm install @openapitools/openapi-generator-cli -g

    - name: Install Poetry
      uses: snok/install-poetry@v1

    - name: Set Python lib version
      working-directory: ./python/generated-library
      run: |
        poetry version ${{ env.RELEASE_VERSION }}      

    - name: build wheel
      working-directory: ./python/generated-library
      run: |
        poetry build
        ls ./dist

    #- name: Publish package distributions to PyPI
    #  uses: pypa/gh-action-pypi-publish@release/v1
    #  with:
    #    packages-dir: ./python/generated-library/dist

  publish_java_lib:
    name: "Publish Java library"
    runs-on: [self-hosted, linux, X64]

    steps:
    - name: checkout
      uses: actions/checkout@v5
      with:
        fetch-depth: '0'
        ref: ${{ env.RELEASE_VERSION }}

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: 21

    - name: Set up Maven
      uses: stCarolas/setup-maven@v5
      with:
         maven-version: 3.9.2

    - name: check git tag
      run: git status

    - name: Set Java lib version
      working-directory: ./java/aicockpit-jar
      run: | 
        echo "new version manually set to ${{ env.RELEASE_VERSION }}"
        mvn -B build-helper:parse-version versions:set -DnewVersion=${{ env.RELEASE_VERSION }} versions:commit --settings ${{ github.workspace }}/.github/workflows/settings.xml
         
    - name: Build Maven project
      working-directory: ./java/aicockpit-jar
      run: mvn clean -B package
      env:
         CI: false
         MAVEN_GPG_PASSPHRASE: ${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}
         MAVEN_GPG_KEY: ${{ secrets.OSSRH_GPG_SECRET_KEY }}

    - name: Publish Maven package to Maven Central
      working-directory: ./java/aicockpit-jar
      run: mvn deploy --settings ${{ github.workspace }}/.github/workflows/settings.xml
      env:
        MAVEN_GPG_PASSPHRASE: ${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}
        MAVEN_GPG_KEY: ${{ secrets.OSSRH_GPG_SECRET_KEY }}        
        MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}